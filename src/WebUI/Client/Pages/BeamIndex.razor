@page "/Beam/pro/"
@using HDS.Shared;
@inject HttpClient _httpClient

<PageTitle> Расчёт балки </PageTitle>

<div class="container content">
    <h3 class="text-center">Расчёт деревянной балки прямоугольного сечения</h3>

    <form class="container mt-3 row ps-1 pe-1" action="/Beam/pro/" method="post">
        <h4 class="col-12">Характеристики балки</h4>

        <InputSelectExtended InputID="Material" Name="Material" Selected="2" Values="MaterialsView" TKey="BeamMatireals" BodyText="Материал"
                             Binder="(ChangeEventArgs __e) => _input.Material = Enum.Parse<BeamMatireals>((string)__e.Value!) "></InputSelectExtended>

        <InputCheckboxExtended InputID="DryWood" BodyText="Доска камерной сушки" 
                               Binder="(ChangeEventArgs __e) => _input.DryWood = Convert.ToBoolean(__e.Value)"></InputCheckboxExtended>

        <InputCheckboxExtended InputID="FlameRetardants" BodyText="Глубокая пропитка антипиренами"
                               Binder="(ChangeEventArgs __e) => _input.FlameRetardants = Convert.ToBoolean(__e.Value)"></InputCheckboxExtended>

        <hr class="my-4">

        <InputNumberExtended BodyText="Длинна" InputID="Length" Minimum="400" Maximum="15000" Units="мм" InputValue="@(_input.Length * 1000)"
                             Binder="((ChangeEventArgs __e) => _input.Length = Convert.ToDouble(__e.Value) / 1000)"></InputNumberExtended>

        <InputNumberExtended BodyText="Ширина" InputID="Width" Minimum="12" Maximum="400" Units="мм" InputValue="@(_input.Width * 1000)"
                             Binder="((ChangeEventArgs __e) => _input.Width = Convert.ToDouble(__e.Value) / 1000)"></InputNumberExtended>

        <InputNumberExtended BodyText="Высота" InputID="Height" Minimum="19" Maximum="300" Units="мм" InputValue="@(_input.Height * 1000)"
                             Binder="((ChangeEventArgs __e) => _input.Height = Convert.ToDouble(__e.Value) / 1000)"></InputNumberExtended>

        <InputNumberExtended BodyText="Количество" InputID="Amount" Minimum="1" Maximum="5" Units="шт" InputValue="@(_input.Amount * 1000)"
                             Binder="((ChangeEventArgs __e) => _input.Amount = Convert.ToInt32(__e.Value))"></InputNumberExtended>

        <hr class="my-4">

        <InputSelectExtended TKey="Exploitations" Values="ExploitationView" InputID="ExploitationSelect" Name="Exploitation" Selected="3"
                             Binder="(ChangeEventArgs __e) => _input.Exploitation = Enum.Parse<Exploitations>((string)__e.Value!)">
            <label class="form-label" for="ExploitationSelect" @onclick="CollapseExploitationTable">
                Класс условий эксплуатации <img class="ms-1 bi" rel="icon" src="/icons/info.ico" type="image/x-icon" width="16" height="16" />
            </label>
        </InputSelectExtended>
        <div class="@exploitationTableClass" id="exploitationTable">
            <table class="table table-bordered border-secondary table-text">
                <thead>
                    <tr>
                        <th colspan="3" class="align-top">Класс условий эксплуатации</th>
                        <th rowspan="2" class="align-top">Дополнительная характеристика условий эксплуатации конструкций</th>
                        <th rowspan="2" class="align-top">Особенность учёта классов при расчёте конструкций</th>
                    </tr>
                    <tr>
                        <th colspan="2" class="align-top">Основной класс</th>
                        <th class="align-top">Подкласс</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td rowspan="2">1</td>
                        <td>1а</td>
                        <td>—</td>
                        <td>При сухом режиме помещений с относительно влажностью воздуха в отопительный сезон менее 40%</td>
                        <td rowspan="4">Эксплуатационная влажность древесины не превышает 12%</td>
                    </tr>
                    <tr>
                        <td>1б</td>
                        <td>—</td>
                        <td>При сухом режиме помещений с относительно влажностью воздуха в отопительный сезон от 40% до 50%</td>
                    </tr>
                    <tr>
                        <td colspan="2" rowspan="2">2</td>
                        <td>2.1</td>
                        <td>При нормальном режиме помещений</td>
                    </tr>
                    <tr>
                        <td>2.2</td>
                        <td>В неотапливаемых помещениях, под навесом и на открытом воздухе в сухой зоне влажности</td>
                    </tr>
                    <tr>
                        <td colspan="2" rowspan="2">3</td>
                        <td>3.1</td>
                        <td>При влажном режиме отпливаемых помещений</td>
                        <td rowspan="2">Эксплуатационная влажность древесины не превышает 15%</td>
                    </tr>
                    <tr>
                        <td>3.2</td>
                        <td>В неотапливаемых помещениях, под навесом или на открытом воздухе в нормальной зоне влажности</td>
                    </tr>
                    <tr>
                        <td rowspan="5">4</td>
                        <td rowspan="3">4а</td>
                        <td>4а.1</td>
                        <td>При мокром режиме эксплуатации помещений</td>
                        <td rowspan="3">Зксплуатационная влажность древесины не превышает 20%</td>
                    </tr>
                    <tr>
                        <td>4а.2</td>
                        <td>При искусственных тепловыделениях в неотапливаемых помещениях</td>
                    </tr>
                    <tr>
                        <td>4а.3</td>
                        <td>В неотапливаемых помещениях, под навесом и на открытом воздухе вл влажной зоне влажности</td>
                    </tr>
                    <tr>
                        <td rowspan="2">4б</td>
                        <td>4б.1</td>
                        <td>При контакте с грунтом</td>
                        <td rowspan="2">Эксплуатационная влажность древесины может превышать 20%</td>
                    </tr>
                    <tr>
                        <td>4б.2</td>
                        <td>В воде</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <InputNumberExtended BodyText="Срок службы" InputID="LifeTime" Minimum="50" Maximum="150" Units="лет" InputValue="50"
                             Binder="((ChangeEventArgs __e) => _input.LifeTime = Convert.ToInt32(__e.Value))"></InputNumberExtended>

        <InputSelectExtended TKey="LoadingModes" Values="LoadingModesView" InputID="LoadingMode" Name="LoadingMode" Selected="4"
                             Binder="(ChangeEventArgs __e) => _input.LoadingMode = Enum.Parse<LoadingModes>((string)__e.Value!)">
            <label class="form-label" for="LoadingMode" @onclick="CollapseLoadingModesTable">
                    Режим нагружения <img class="ms-1 bi" rel="icon" src="/icons/info.ico" type="image/x-icon" width="16" height="16" />
            </label>
        </InputSelectExtended>
        <div class="@loadingModesTableClass" id="LoadingModesTable">
            <table class="table table-bordered border-secondary table-text">
                <thead>
                    <tr>
                        <th class="align-top">Обозначение режима нагружения</th>
                        <th class="align-top">Характеристика режима нагружения</th>
                    </tr>
                </thead>
                <tbody>
                <tbody>
                    <tr>
                        <td>А</td>
                        <td>Линейно возрастающая нагрузка при стандартных машинных испытаниях</td>
                    </tr>
                    <tr>
                        <td>Б</td>
                        <td>Совместное действие постоянной и длительной временной нагрузок, напряжение от которых превышает 80% полного напряжения в элементах конструкций от всех нагрузок</td>
                    </tr>
                    <tr>
                        <td>В</td>
                        <td>Совместное действие постоянной, длительной временной нагрузок и нагрузок от людей на перекрытия жилых и общественных зданий</td>
                    </tr>
                    <tr>
                        <td>Г</td>
                        <td>Совместное действие постоянной и кратковременной снеговой нагрузок</td>
                    </tr>
                    <tr>
                        <td>Д</td>
                        <td>Совместное действие постоянной и кратковременной ветровой нагрузок или постоянной и кратковременных снеговой и ветровой нагрузок</td>
                    </tr>
                    <tr>
                        <td>Е</td>
                        <td>Совместное действие постоянной и монтажной нагрузок</td>
                    </tr>
                    <tr>
                        <td>Ж</td>
                        <td>Совместное действие постоянной и сейсмической нагрузок</td>
                    </tr>
                    <tr>
                        <td>И</td>
                        <td>Действие импульсивных и ударных нагрузок</td>
                    </tr>
                    <tr>
                        <td>К</td>
                        <td>Совместное действие постоянной и кратковременной снеговой нагрузок в условиях пожара</td>
                    </tr>
                    <tr>
                        <td>Л</td>
                        <td>Для опор воздушных линий электропередачи - гололедная, монтажная, ветровая при гололеде, от тяжения проводов при температуре ниже среднегодовой</td>
                    </tr>
                    <tr>
                        <td>М</td>
                        <td>Для опор воздушных линий электропередачи - при обрыве проводов и тросов</td>
                    </tr>
                </tbody>
                </tbody>
            </table>
        </div>

        <InputNumberExtended BodyText="Установившаяся температура воздуха" InputID="SteadyTemperature" Minimum="20" Maximum="50" Units="°C" InputValue="@(_input.SteadyTemperature)"
                             Binder="(ChangeEventArgs __e) => _input.SteadyTemperature = Convert.ToInt32(__e.Value)"></InputNumberExtended>

        <hr class="my-4">

        <h4>Опоры</h4>

        <button @onclick="AddSupport" type="button" class="btn btn-secondary col-12 col-md-3 mb-4 buttons-margin" id="addSupport">Добавить</button>
        @for (int i = 0; i < _input.Supports.Count(); i++)
        {
            int currentIndex = i;

            <InputNumberExtended InputID="@("support" + (i + 1).ToString())" 
                             BodyText="@("Смещение опоры " + (i + 1).ToString())"
                             Minimum="400" Maximum="15000" Units="мм"
                             InputValue="@(_input.Supports[currentIndex] * 1000)"
                             Binder="((ChangeEventArgs __e) => _input.Supports[currentIndex]= Convert.ToDouble(__e?.Value) / 1000)">
                <button type="button" class="btn btn-outline-danger col-4 col-lg-3" @onclick="@(e => DeleteSupport(currentIndex))">
                    Удалить
                </button>
            </InputNumberExtended>
        }

        <hr class="my-4">

        <h4>Нормативные равномерно распределённые нагрузки</h4>
        <!--добавить Нормативные равномерно распределённые нагрузки в1-->
        <button @onclick="AddDistributedLoadV1" type="button" class="btn btn-secondary col-12 col-md-4 col-lg-3 mb-2 mb-md-4 me-4 buttons-margin" id="AddDistributedV1">Добавить Вариант 1</button>

        <!--добавить Нормативные равномерно распределённые нагрузки в2-->
        <button @onclick="AddDistributedLoadV2" type="button" class="btn btn-secondary col-12 col-md-4 col-lg-3 mb-2 mb-md-4 buttons-margin" id="AddDistributedV2">Добавить Вариант 2</button>

        <!--Нормативные равномерно распределённые нагрузки в1-->
        @for(int i = 0; i < DistributedLoadsV1.Count; i++)
        {
            int currentIndex = i;

            <div class="row mb-1">
                <div class="col-6 col-lg-4 mb-0 d-flex align-items-center">
                    <h5 class="mb-0">Нагрузка @(currentIndex + 1)</h5>
                </div>
                <button type="button" class="btn btn-outline-danger col-6 col-md-3 but-ms-md" @onclick="@(e => DeleteDistributedLoadV1(currentIndex))"> Удалить</button>
            </div>


            <InputNumberExtended InputID="@("OffsetStart" + i.ToString())" BodyText="смещение начала нагрузки" Minimum="0" Maximum="15000" Units="мм"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV1[currentIndex].OffsetStart = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>
            <InputNumberExtended InputID="@("OffsetEnd" + i.ToString())" BodyText="смещение конца нагрузки" Minimum="0" Maximum="15000" Units="мм"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV1[currentIndex].OffsetEnd = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>

            <InputNumberExtended InputID="@("LoadForFirstGroup" + i.ToString())" BodyText="Нагрузка для расчёта по первой группе" Units="кг/м"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV1[currentIndex].LoadForFirstGroup = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
            <InputNumberExtended InputID="@("LoadForFirstGroup" + i.ToString())" BodyText="Нагрузка для расчёта по первой группе" Units="кг/м"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV1[currentIndex].LoadForSecondGroup = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
        }


        <!--Нормативные равномерно распределённые нагрузки в2-->
        @for (int i = 0; i < DistributedLoadsV2.Count; i++)
        {
            int currentIndex = i;

            <div class="row mb-1">
                <div class="col-6 col-lg-4  mb-0 d-flex align-items-center">
                    <h5 class="mb-0">Нагрузка @(DistributedLoadsV1.Count + currentIndex + 1)</h5>
                </div>
                <button type="button" class="btn btn-outline-danger col-6 col-md-3 but-ms-md" @onclick="@(e => DeleteDistributedLoadV2(currentIndex))"> Удалить</button>
            </div>

            <InputNumberExtended InputID="@("OffsetStart" + i.ToString())" BodyText="смещение начала нагрузки" Minimum="0" Maximum="15000" Units="мм"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].OffsetStart = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>
            <InputNumberExtended InputID="@("OffsetEnd" + i.ToString())" BodyText="смещение конца нагрузки" Minimum="0" Maximum="15000" Units="мм"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].OffsetEnd = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>

            <div class="row align-items-center mb-2">
                <div class="col-12 col-lg-4">
                    <label class="form-label" for="@("NormativeValue" + i.ToString())" > Нормативная величина </label>
                </div>
                <div class="col-12 col-lg-5">
                    <div class="input-group">
                        <input type="number" step="0.1" class="form-control" id="@("NormativeValue" + i.ToString())" name="DNormativeValue" value="1"
                           @onchange="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].NormativeValue = Convert.ToDouble(__e?.Value)">
                        <div class="input-group-text p-0">
                            <select class="form-select input-group-text pe-4 UMChoise" id="@("NormativeValueUM" + i.ToString())"
                                @onchange="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].NormativeValueUM = Enum.Parse<Units>((string)__e?.Value!)">
                                <option value="kgm2">кг/м<sup>2</sup></option>
                                <option value="kgm" selected>кг/м</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>


            
            if (DistributedLoadsV2[i].NormativeValueUM == Units.kgm2)
            {
                <InputNumberExtended InputID="@("LoadAreaWidth" + i.ToString())" BodyText="Ширина грузовой площади" Minimum="0" Units="мм"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].LoadAreaWidth = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>
            }
            else
            {
                DistributedLoadsV2[i].LoadAreaWidth = null;
            }

            <InputNumberExtended InputID="@("ReliabilityCoefficient" + i.ToString())" BodyText="Коэффициент надёжности" Step="0.1"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].ReliabilityCoefficient = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
            <InputNumberExtended InputID="@("ReducingFactor" + i.ToString())" BodyText="Понижающий коэффициент" Step="0.1"
                             Binder="(ChangeEventArgs __e) => DistributedLoadsV2[currentIndex].ReducingFactor = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
        }
        <!--линия-->
        <hr class="my-4">
        <h4>Нормативные сосредоточенные нагрузки</h4>

        <!--добавить Нормативные сосредоточенные нагрузки в1-->
        <button @onclick="AddConcentratedLoadV1" type="button" class="btn btn-secondary col-12 col-md-4 col-lg-3 mb-2 mb-md-4 me-4 buttons-margin">Добавить Вариант 1</button>
        <!--добавить Нормативные сосредоточенные нагрузки в2-->
        <button @onclick="AddConcentratedLoadV2" type="button" class="btn btn-secondary col-12 col-md-4 col-lg-3 mb-2 mb-md-4 me-4 buttons-margin">Добавить Вариант 2</button>

        <!--Нормативные сосредоточенные нагрузки в1-->
        @for (int i = 0; i < ConcentratedLoadsV1.Count(); i++)
        {
            int currentIndex = i;

            <div class="row mb-1">
                <div class="col-6 col-lg-4  mb-0 d-flex align-items-center">
                    <h5 class="mb-0">Нагрузка @(currentIndex + 1)</h5>
                </div>
                <button type="button" class="btn btn-outline-danger col-6 col-md-3 but-ms-md" @onclick="@(e => DeleteConcentratedLoadV1(currentIndex))"> Удалить</button>
            </div>

            <InputNumberExtended InputID="@("Offset" + i.ToString())" BodyText="смещение нагрузки" Minimum="0" Maximum="15000" Units="мм"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV1[currentIndex].Offset = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>

            <InputNumberExtended InputID="@("LoadForFirstGroup" + i.ToString())" BodyText="Нагрузка для расчёта по первой группе" Units="кг/м"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV1[currentIndex].LoadForFirstGroup = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
            <InputNumberExtended InputID="@("LoadForFirstGroup" + i.ToString())" BodyText="Нагрузка для расчёта по первой группе" Units="кг/м"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV1[currentIndex].LoadForSecondGroup = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
        }
        <!--Нормативные сосредоточенные нагрузки в2-->
        @for (int i = 0; i < ConcentratedLoadsV2.Count(); i++)
        {
            int currentIndex = i;

            <div class="row mb-1">
                <div class="col-6 col-lg-4  mb-0 d-flex align-items-center">
                    <h5 class="mb-0">Нагрузка @(ConcentratedLoadsV1.Count() + currentIndex + 1)</h5>
                </div>
                <button type="button" class="btn btn-outline-danger col-6 col-md-3 but-ms-md" @onclick="@(e => DeleteConcentratedLoadV2(currentIndex))"> Удалить</button>
            </div>

            <InputNumberExtended InputID="@("Offset" + i.ToString())" BodyText="смещение нагрузки" Minimum="0" Maximum="15000" Units="мм"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV2[currentIndex].Offset = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>
            <InputNumberExtended InputID="@("NormativeValue" + i.ToString())" BodyText="Нормативная величина" Units="кг/м2"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV2[currentIndex].NormativeValue = Convert.ToDouble(__e?.Value) / 1000"></InputNumberExtended>

            <InputNumberExtended InputID="@("ReliabilityCoefficient" + i.ToString())" BodyText="Коэффициент надёжности" Step="0.1"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV2[currentIndex].ReliabilityCoefficient = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
            <InputNumberExtended InputID="@("ReducingFactor" + i.ToString())" BodyText="Понижающий коэффициент" Step="0.1"
                             Binder="(ChangeEventArgs __e) => ConcentratedLoadsV2[currentIndex].ReducingFactor = Convert.ToDouble(__e?.Value)"></InputNumberExtended>
        }
        <!--линия-->
        <hr class="my-4">

        <button @onclick="CalculateFull" type="button" class="btn btn-primary buttons-margin">Расчёт на сервере</button>
    </form>
</div>
@if (_result != null)
{
    <div class="container content row">
    <h3 class="text-center">Расчёт деревянной балки прямоугольного сечения</h3>
    <h4>Исходные данные</h4>
    <div class="col-12">
        <table class="table table-bordered table-hover border-secondary caption-top w-auto ">
            <caption class="text-body">Параметры балки:</caption>

            <tr>
                <td> Материал балки</td>
                <td></td>
                <td>
                    @{
                        switch (_result.Input.Material)
                        {
                            case Data.BeamMatireals.PlankK16:
                                            @: Доска сосна, ель класс K16/сорт 3
                                break;

                            case Data.BeamMatireals.PlankK24:
                                            @: Доска сосна, ель класс K24/сорт 2
                                break;

                            case Data.BeamMatireals.PlankK26:
                                            @: Доска сосна, ель класс K26/сорт 1
                                break;

                            case Data.BeamMatireals.LvlK35:
                                            @: Брус LVL класс K35/сорт 3
                                break;

                            case Data.BeamMatireals.LvlK40:
                                            @: Брус LVL класс K40/сорт 2
                                break;

                            case Data.BeamMatireals.LvlK45:
                                            @: Брус LVL класс K45/сорт 1
                                break;
                        }
                    }
                </td>
            </tr>
            <tr>
                <td> Ширина сечения доски </td>
                <td> мм </td>
                <td> @(_result.Input.Width * 1000)</td>
            </tr>
            <tr>
                <td> Высота сечения доски </td>
                <td> мм </td>
                <td> @(_result.Input.Height * 1000)</td>
            </tr>
            <tr>
                <td> Длина балки </td>
                <td> мм </td>
                <td> @(_result.Input.Length * 1000)</td>
            </tr>
            <tr>
                <td> Количество досок в пакете </td>
                <td> шт </td>
                <td> @_result.Input.Amount </td>
            </tr>

        </table>
    </div>
    <div class="col-12">
        <table class="table table-bordered table-hover border-secondary caption-top w-auto">
            <caption class="text-body">Опоры:</caption>
            <tbody>
                @{
                    int i = 1;

                    foreach (var s in _result.Input.Supports)
                    {
                                    <tr>
                                        <td>@i</td>
                                        <td>мм</td>
                                        <td>@(s * 1000)</td>
                                    </tr>
                        i++;
                    }
                }
            </tbody>
        </table>
    </div>
    <h4>Общие расчётные характеристики</h4>
    <div class="col-12">
        <table class="table table-bordered table-hover border-secondary caption-top w-auto">
            <caption class="text-body">Геометрические характеристики балки</caption>
            <tbody>
                <tr>
                    <td>Величина усушки доски по ширине</td>
                    <td></td>
                    <td>мм</td>
                    <td>@System.Math.Round(_result.ShrinkageInWidth * 1000, 1)</td>
                </tr>
                <tr>
                    <td>Величина усушки доски по высоте</td>
                    <td></td>
                    <td>мм</td>
                    <td>@System.Math.Round(_result.ShrinkageInHeight * 1000, 1)</td>
                </tr>
                <tr>
                    <td>Расчётная ширина сечения балки</td>
                    <td></td>
                    <td>мм</td>
                    <td>@System.Math.Round(_result.EffectiveWidth * 1000, 1)</td>
                </tr>
                <tr>
                    <td>Расчётная высота сечения балки</td>
                    <td></td>
                    <td>мм</td>
                    <td>@System.Math.Round(_result.EffectiveHeight * 1000, 1)</td>
                </tr>
                <tr>
                    <td>Площадь поперечного сечения балки</td>
                    <td><math><mi>F</mi></math></td>
                    <td>мм<sup>2</sup></td>
                    <td>@System.Math.Round(_result.CrossSectionArea * 1000 * 1000, 1)</td>
                </tr>
                <tr>
                    <td>Полярный момент инерции сечения</td>
                    <td><math><msub><mi>J</mi><mi>p</mi></msub></math></td>
                    <td>мм<sup>4</sup></td>
                    <td>@System.Math.Round(_result.PolarMomentOfInertia * 1000 * 1000 * 1000 * 1000)</td>
                </tr>
                <tr>
                    <td>Осевой момент инерции сечения относительно оси Y</td>
                    <td><math><msub><mi>I</mi><mi>y</mi></msub></math></td>
                    <td>мм<sup>4</sup></td>
                    <td>@System.Math.Round(_result.MomentOfInertiaY * 1000 * 1000 * 1000 * 1000)</td>
                </tr>
                <tr>
                    <td>Осевой момент инерции сечения относительно оси Z</td>
                    <td><math><msub><mi>I</mi><mi>z</mi></msub></math></td>
                    <td>мм<sup>4</sup></td>
                    <td>@System.Math.Round(_result.MomentOfInertiaZ * 1000 * 1000 * 1000 * 1000)</td>
                </tr>
                <tr>
                    <td>Момент сопротивления сечения относительно оси Y</td>
                    <td><math><msub><mi>W</mi><mi>y</mi></msub></math></td>
                    <td>мм<sup>3</sup></td>
                    <td>@System.Math.Round(_result.MomentOfResistanceY * 1000 * 1000 * 1000)</td>
                </tr>
                <tr>
                    <td>Момент сопротивления сечения относительно оси Z</td>
                    <td><math><msub><mi>W</mi><mi>z</mi></msub></math></td>
                    <td>мм<sup>3</sup></td>
                    <td>@System.Math.Round(_result.MomentOfResistanceZ * 1000 * 1000 * 1000)</td>
                </tr>
                <tr>
                    <td>Статический момент площади сдвигаемого сечения относительно оси Y</td>
                    <td><math><msub><mi>S</mi><mi>y</mi></msub></math></td>
                    <td>мм<sup>3</sup></td>
                    <td>@System.Math.Round(_result.StaticMomentOfShearSectionY * 1000 * 1000 * 1000)</td>
                </tr>
                <tr>
                    <td>Статический момент площади сдвигаемого сечения относительно оси Z</td>
                    <td><math><msub><mi>S</mi><mi>z</mi></msub></math></td>
                    <td>мм<sup>3</sup></td>
                    <td>@System.Math.Round(_result.StaticMomentOfShearSectionZ * 1000 * 1000 * 1000)</td>
                </tr>


            </tbody>
        </table>
    </div>
    <div class="col-12">
        <table class="table table-bordered table-hover border-secondary caption-top w-auto">
            <caption class="text-body">Физико-механические характеристики материала</caption>
            <tbody>
                <tr>
                    <td>Нормативный модуль упругости при изгибе с обеспеченностью 0.95</td>
                    <td><math><msub><mi>E</mi><mi>н</mi></msub></math></td>
                    <td>МПа</td>
                    <td>@(_result.StiffnessModulus / 1000000)</td>
                </tr>
                <tr>
                    <td>Средний модуль упругости при изгибе</td>
                    <td><math><msub><mi>E</mi><mi>ср</mi></msub></math></td>
                    <td>МПа</td>
                    <td>@(_result.StiffnessModulusAverage / 1000000)</td>
                </tr>
                <tr>
                    <td>Средний модуль сдвига</td>
                    <td><math><msub><mi>G</mi><mi>ср</mi></msub></math></td>
                    <td>МПа</td>
                    <td>@(_result.ShearModulusAverage / 1000000)</td>
                </tr>
                <tr>
                    <td>Расчётное сопротивление изгибу</td>
                    <td><math><msubsup><mi>R</mi><mi>и</mi><mi>А</mi></msubsup></math></td>
                    <td>МПа</td>
                    <td>@(_result.BendingResistance / 1000000)</td>
                </tr>
                <tr>
                    <td>Расчётное сопротивление скалыванию при изгибе</td>
                    <td><math><msubsup><mi>R</mi><mi>ск</mi><mi>А</mi></msubsup></math></td>
                    <td>МПа</td>
                    <td>@(_result.BendingShearResistance / 1000000)</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-12">
        <table class="table table-bordered table-hover border-secondary caption-top w-auto  ">
            <caption class="text-body">Коэффициенты условий работы</caption>
            <tbody>
                <tr>
                    <td>Глубокая пропитка антипиренами</td>
                    <td><math><msub><mi>m</mi><mi>а</mi></msub></math></td>
                    <td>@_result.MaCoefficient</td>
                </tr>
                <tr>
                    <td>Класс условий эксплуатации</td>
                    <td><math><msub><mi>m</mi><mi>В</mi></msub></math></td>
                    <td>@_result.MbCoefficient</td>
                </tr>
                <tr>
                    <td>Срок службы</td>
                    <td><math><msub><mi>m</mi><mi>с.с</mi></msub></math></td>
                    <td>@_result.MccCoefficient</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
}

@code{
    private BeamInput _input = new();
    private FullReport? _result;

    private bool exploitationTable = false;
    private string exploitationTableClass => exploitationTable ? "" : "collapse";

    private bool loadingModesTable = false;
    private string loadingModesTableClass => loadingModesTable ? "" : "collapse";

    private List<DistributedLoad> DistributedLoadsV1 = new List<DistributedLoad>();
    private List<DistributedLoadV2> DistributedLoadsV2 = new List<DistributedLoadV2>();

    private List<ConcentratedLoad> ConcentratedLoadsV1 = new List<ConcentratedLoad>();
    private List<ConcentratedLoadV2> ConcentratedLoadsV2 = new List<ConcentratedLoadV2>();

    private Dictionary<BeamMatireals, string> MaterialsView = new Dictionary<BeamMatireals, string>()
    {
        {BeamMatireals.PlankK16, "Доска сосна, ель класс K16/сорт 3"},
        {BeamMatireals.PlankK24, "Доска сосна, ель класс K24/сорт 2"},
        {BeamMatireals.PlankK26, "Доска сосна, ель класс K26/сорт 1"},
        {BeamMatireals.LvlK35, "Брус LVL класс K35/сорт 3"},
        {BeamMatireals.LvlK40, "Брус LVL класс K40/сорт 2"},
        {BeamMatireals.LvlK45, "Брус LVL класс K45/сорт 1"},
    };
    private Dictionary<Exploitations, string> ExploitationView = new Dictionary<Exploitations, string>()
        {
        {Exploitations.Class1A, "1а (сухой)"},
        {Exploitations.Class1B, "1б (сухой)"},
        {Exploitations.Class2, "2 (нормальный)"},
        {Exploitations.Class3, "3 (влажный)"},
        {Exploitations.Class4A, "4а (мокрый)"},
        {Exploitations.Class4B, "4б (мокрый)"}
        };
    private Dictionary<LoadingModes, string> LoadingModesView = new Dictionary<LoadingModes, string>()
    {
        {LoadingModes.A, "А"},
        {LoadingModes.B, "Б"},
        {LoadingModes.V, "В"},
        {LoadingModes.G, "Г"},
        {LoadingModes.D, "Д"},
        {LoadingModes.E, "Е"},
        {LoadingModes.J, "Ж"},
        {LoadingModes.I, "И"},
        {LoadingModes.K, "К"},
        {LoadingModes.L, "Л"},
        {LoadingModes.M, "М"}
    };

    protected override void OnInitialized()
    {
        _input.Length = 3;
        _input.Supports.Add(0);
        _input.Supports.Add(3);
    }

    private void CalculateFull()
    {
        _input.DistributedLoads = new List<DistributedLoad>();
        _input.DistributedLoads.AddRange(DistributedLoadsV1);
        foreach (DistributedLoad load in DistributedLoadsV2)
        {
            _input.DistributedLoads.Add(load);
        }

        _input.ConcentratedLoads = new List<ConcentratedLoad>();
        _input.ConcentratedLoads.AddRange(ConcentratedLoadsV1);
        foreach (ConcentratedLoad load in ConcentratedLoadsV2)
        {
            _input.ConcentratedLoads.Add(load);
        }

        Console.WriteLine(_input);
        // http request
        //_result = http response
    }

    private void CollapseExploitationTable() => exploitationTable = !exploitationTable;
    private void CollapseLoadingModesTable() => loadingModesTable = !loadingModesTable;

    private void AddSupport() => _input.Supports.Add(0);
    private void DeleteSupport(int index) => _input.Supports.RemoveAt(index);


    private void AddDistributedLoadV1() => DistributedLoadsV1.Add(new DistributedLoad());
    private void DeleteDistributedLoadV1(int index) => DistributedLoadsV1.RemoveAt(index);

    private void AddDistributedLoadV2() => DistributedLoadsV2.Add(new DistributedLoadV2());
    private void DeleteDistributedLoadV2(int index) => DistributedLoadsV2.RemoveAt(index);

    private void AddConcentratedLoadV1() => ConcentratedLoadsV1.Add(new ConcentratedLoad());
    private void DeleteConcentratedLoadV1(int index) => ConcentratedLoadsV1.RemoveAt(index);

    private void AddConcentratedLoadV2() => ConcentratedLoadsV2.Add(new ConcentratedLoadV2());
    private void DeleteConcentratedLoadV2(int index) => ConcentratedLoadsV2.RemoveAt(index);
}